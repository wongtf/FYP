<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ErrorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>43</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hQCBhokAjIeJAIKIigCPjY4AkZeaAJuengCrpKkAVltfAPv//wDHzMwA3t/fAGNpbgB/a2cAa2JfAF5h
        ZgDn3twALzI0AJWanQCVm54Aj5adAI+XngCJkJgAipGZAPf9/gD0/v8Az9HZAMnU3wBxeH8AdXp8AGht
        cQBtbXAAaG50AJKYnACXnZ4A8vv/APP8/wD4+/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAOQQEBAQEJyk4AAAAAAAAKgICAgICAgICAgcHBwcHCQAaNhwXEgk1BhIXGS0KFSsAFT4vSwNCEwMR
        BQYGCh0AADMODgg9Mg0DJQ4fCUUeAAAmQCMKOyQNAw9JDAwbQwAAAAVBCgVGDQgPSgwMGAAAAAAoFgMG
        FBMIECEMDDQAAAAACxYDBhQ3PBAhDDEiAAAAAAAgCBEuCUcDPy8sAAAAAAAAOgVEAAAABUgwCwAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAAgD8AAAAA
        AACAAAAAgAEAAIABAACAAQAAwAMAAMADAADAAwAA4AcAAOOHAAD//wAA//8AAP//AAA=
</value>
  </data>
</root>