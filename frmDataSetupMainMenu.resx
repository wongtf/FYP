<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdDetailsDef.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAIAAAD8GO2jAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAJ1gAA
        CdYBYyn1UwAAA/RJREFUSEvd1ttvIlUcB/CjD5v4P/jg29aNLz75N2jcN10TNdE347Mx2cSN3WjaJpr1
        1q1Lu6XbC6UXbpXSodACA3ZbKDtQykK5FLYw3O8wDDAF5ucxQ2jZ0lqTbryc5xM+8+X3O+d3XgIA9EIX
        Bl7oQmd/vdJolVt8sdHKVrhMqVGsNft+AQ+QZ5uZYj1X4fDmcpNnGq2zO/sAO+HsBh1TOg8kOkpCODcD
        qb5Ai4d1T3Je71oyP1W7/IQ/5IjmLwVEQ78Hjj51Oz+iZm855t4P0fK+QBsgSE3uU7dctg88qo+9a58k
        cweXAtw+m9E1rNJ/JRv/cmXqtj24eV6CXYrQGu6srt/RLH+tUQ366MsBfHy1FkLVPcSKUEOM+MLwuV1A
        fd6mUcONqg9Q9SFq1/culQASGogj8COYQjCDoDhyAXCycxYBt/9PA602b4mVFv2xcdJzT2b7RkT+qHQ8
        soZX6FKM7WlWmz81YfFL3EfT1OGYzvX9wu53c/YJQ9AcYzjcv6dWT5vaoxU1zeoKTdlBQWyK/LTomTQc
        LXvy2txxvNbT43tHpaWneW2W0yTqUkdapA2NKn0z23FlqLxb408TJ0CB4aRUSgCkruTDVWL00RxOsOBK
        XQCsRCrT5I5YMTs0tSU2P8PAZpWPMMfdDCeAyZWef/InQGTqBDnEG14GEzItvTemdxJZDidI11rzbt6U
        bmSYlpCAyDRUdlXTeA0WkVfx5oiUlAXyGDDGqs8D3HF7cj0kAOpEJSV/DaYRkIizXBuS6laT7OMoI8f/
        VZYbXw9LthMb7iwGNEnWRdyEbxEsIzCjodEHi54UBlThSpHthOgkCMQqorXDbgJK8g7MIbCgw5lXf1Bv
        4wRUkl3xdgCZPWX25oQakMRduI9Aixj1K4MiuZAAA54EI4ToAJuOZBfANZDshn4b/Uw5+O7IhEJCxYUa
        NPDlEwBvna83oVtkZbigmrlLDL89NPKLaMMn1AADW8FCDzBveHYawF00RUbvSfbExshfdtGCMzOm8d9X
        +YUuEoC1/UwPINIEzwI/L3m7AM2e26YYwIV5DlA50z3Ar+rAxcAF56AvoHB0LvlODf4VAB4ASQbKLcCj
        5vRJvpoEwQJnOiwp6ePprRgZKO0GC92r4moAjbMgsWeFgyYmabUtdcUATmCNMpJAU+rMWsOVq0/wv+ii
        02Pkb3eRzBxRbNFab96cru9lPDbabHbodWtqM6mz+rYel5qZ3kdVIMFsHBZcCaszt7PjMxpMWj2hMTqf
        4IvaVuNNcdZw0Hkj9Xl4wf6HELkB1gFYHoDZ18H2Vv+hz5XB8gaE8YbrIB+A6Rvg/+JyQ/9K36r9Evy3
        gD8APbYpxHzHAUgAAAAASUVORK5CYII=
</value>
  </data>
</root>